1) Unir dos tablas con valor null del lado de person
select *
from person p right join address a
on p.personid = a.personid

2) Segundo salario mas alto
select *
from employee
where salary < (max (salary) from employee)
order by salary desc
limit 1 offset 1


3) Remplazar offset por el nth valor

4)Rankeados, con dense rank, para repetir numero de rango
SELECT *, DENSE RANK OVER (ORDER BY scores DESC) AS Rank
FROM scores


5) Como saber que empleado gana mas que el manager
SELECT e.name
FROM Employee e
JOIN Employee m ON e.managerId = m.id
WHERE e.salary > m.salary;

usando CTEs

WITH salary_employee AS (
    SELECT id, name, salary, managerId
    FROM Employee
),
salary_manager AS (
    SELECT id, salary
    FROM Employee
)
SELECT e.name, e.salary, m.salary AS manager_salary
FROM salary_employee e
JOIN salary_manager m ON e.managerId = m.id
WHERE e.salary > m.salary;

6) reportar todos los emails duplicados

SELECT id, email
FROM person
WHERE email IN (
  SELECT email
  FROM person
  GROUP BY email
  HAVING COUNT(*) > 1
);


SELECT e.email
FROM person e
JOIN person m 
  ON e.email = m.email AND e.id != m.id
GROUP BY e.email;

7) Clientes que nunca ordenaron nada
SELECT c.name
FROM Customers c
LEFT JOIN Orders o ON c.id = o.customerID
WHERE o.customerID IS NULL

8) Encontrar el salario mas alto de cada departamento
SELECT departmentID, MAX(salary) AS highest_salary
FROM Employee
GROUP BY departmentID;

Haciendo un join con la tabla dptid
SELECT e.name, d.name AS department, e.salary
FROM Employee e
JOIN Department d ON e.departmentID = d.id
WHERE e.salary = (
    SELECT MAX(salary)
    FROM Employee
    WHERE departmentID = e.departmentID
);

10)Los 3 salarios mas alto de cada departamento
WITH SalaryRanking AS (
    SELECT e.id, e.name, e.salary, e.departmentID,
           DENSE_RANK() OVER (PARTITION BY e.departmentID ORDER BY e.salary DESC) AS salary_rank
    FROM Employee e
)
SELECT s.id, s.name, s.salary, d.name AS department
FROM SalaryRanking s
JOIN Department d ON s.departmentID = d.id
WHERE s.salary_rank <= 3;

11) Borrar emails duplicados, quedandonos con la ID mas baja

DELETE FROM Person
WHERE id NOT IN (
    SELECT MIN(id)
    FROM Person
    GROUP BY email
);

12) SELECT w1.id
FROM Weather w1
JOIN Weather w2 ON DATEADD(DAY, -1, w1.recordDate) = w2.recordDate
WHERE w1.temperature > w2.temperature;
)

